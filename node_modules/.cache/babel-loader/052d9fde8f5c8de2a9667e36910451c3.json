{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Documentos/Dise\\xF1o web/portafolio_0.1/src/Components/Calc.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calc = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calc\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"sec\",\n        value: \"\",\n        autocomplete: \"off\",\n        readonly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"main\",\n        value: \"\",\n        autocomplete: \"off\",\n        readonly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Calc;\nexport default Calc;\n/* for (let i = 0; i < botones.length; i++) {\n\tconst element = botones[i];\n\telement.addEventListener('click', function() {\n\t\telement.value == \"=\"? (second.value=main.value,\n\t\t\t\t\t\t\t\t main.value=eval(second.value)):\n\t\telement.value == \"C\"? (second.value=\"\",\n\t\t\t\t\t\t\t     main.value=\"\"):\n\t\telement.value == \"back\"? main.value=main.value.substring(0,main.value.length-1):\n\t\t\n\t\tmain.value=main.value + element.value;\n\t})};\n\n\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Calc\");","map":{"version":3,"sources":["/home/ivan/Documentos/DiseÃ±o web/portafolio_0.1/src/Components/Calc.js"],"names":["Calc"],"mappings":";;;AAAA,MAAMA,IAAI,GAAG,MAAM;AACf,sBACQ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAC,EAAlC;AAAqC,QAAA,YAAY,EAAC,KAAlD;AAAwD,QAAA,QAAQ;AAAhE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,KAAK,EAAC,EAAnC;AAAsC,QAAA,YAAY,EAAC,KAAnD;AAAyD,QAAA,QAAQ;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AAQH,CATD;;KAAMA,I;AAWN,eAAeA,IAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const Calc = () => {\n    return (\n            <div className=\"calc\">\n                <div className=\"display\">\n                    <input type=\"text\" id=\"sec\" value=\"\" autocomplete=\"off\" readonly />\n                    <input type=\"text\" id=\"main\" value=\"\" autocomplete=\"off\" readonly />\n                </div>\n            </div>\n    )\n}\n\nexport default Calc\n\n\n\n/* for (let i = 0; i < botones.length; i++) {\n\tconst element = botones[i];\n\telement.addEventListener('click', function() {\n\t\telement.value == \"=\"? (second.value=main.value,\n\t\t\t\t\t\t\t\t main.value=eval(second.value)):\n\t\telement.value == \"C\"? (second.value=\"\",\n\t\t\t\t\t\t\t     main.value=\"\"):\n\t\telement.value == \"back\"? main.value=main.value.substring(0,main.value.length-1):\n\t\t\n\t\tmain.value=main.value + element.value;\n\t})};\n\n\n */"]},"metadata":{},"sourceType":"module"}